apiVersion: v1
kind: Service
metadata:
  name: YOUR-PRIMARY-CDS-SERVICE
  namespace: YOUR-NAMESPACE
  labels:
    app: YOUR-PRIMARY-CDS-SERVICE
spec:
  ports:
    - port: 8080
      name: internal-port
      protocol: TCP
      targetPort: 8080
    - port: 8081
      name: public-port
      protocol: TCP
      targetPort: 8081
  selector:
    app: YOUR-PRIMARY-CDS-DEPLOYMENT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: YOUR-PRIMARY-CDS-DEPLOYMENT
  namespace: YOUR-NAMESPACE
  labels:
    app: YOUR-PRIMARY-CDS-DEPLOYMENT
spec:
  selector:
    matchLabels:
      app: YOUR-PRIMARY-CDS-DEPLOYMENT
  template:
    metadata:
      labels:
        app: YOUR-PRIMARY-CDS-DEPLOYMENT
    spec:
      initContainers:
        - name: init-cds-data
          image: busybox
          imagePullPolicy: IfNotPresent
          command: ['sh', '-c', 'wget --no-check-certificate https://github.com/entando-ps/cds/blob/entando720/entando-data/entando720.tar.gz?raw=true; tar -xf entando720.tar.gz; rm entando720.tar.gz ']
          volumeMounts:
            - mountPath: /entando-data
              name: cds-data-volume
      containers:
        - readinessProbe:
            httpGet:
              port: 8081
              path: /health/health_check
              scheme: HTTP
            failureThreshold: 1
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 5
          env:
            - name: RUST_LOG
              value: actix_web=info,actix_server=info,actix_web_middleware_keycloak_auth=trace
            - name: KEYCLOAK_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  key: KC_PUBLIC_KEY
                  name: YOUR-PRIMARY-KC-SECRET
            - name: CORS_ALLOWED_ORIGIN # # use for external CDS service
              value: All # enter your Entando app domain name
            - name: CORS_ALLOWED_ORIGIN_END_WITH # use for wildcard domain name
              value: "YOUR-CORS-BASEURL" # enter wildcard domain name for your Entando app, e.g. "nip.io"
          name: cds
          image: docker.io/entando/cds:1.0.4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              scheme: HTTP
              port: 8081
              path: /health/health_check
            timeoutSeconds: 5
            successThreshold: 1
            periodSeconds: 30
            initialDelaySeconds: 5
            failureThreshold: 1
          ports:
            - containerPort: 8080
              name: internal-port
            - containerPort: 8081
              name: public-port
          resources:
            limits:
              cpu: 500m
              memory: 500Mi
            requests:
              cpu: 500m
              memory: 500Mi
          volumeMounts:
            - mountPath: /entando-data
              name: cds-data-volume
      volumes:
        - name: cds-data-volume
          persistentVolumeClaim:
            claimName: YOUR-PRIMARY-PVC
            readOnly: false
  replicas: 1